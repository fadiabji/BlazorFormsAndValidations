@page "/"
@using System.ComponentModel.DataAnnotations;

<PageTitle>Index</PageTitle>

<h1>Hello, world!</h1>

Welcome to your new app.




<EditForm Model="person" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />

    <div class="form-group">
        <label for="firstName">First Name:</label>
        <InputText id="firstName" class="form-control" @bind-Value="person.FirstName" />
        <ValidationMessage For="@(() => person.FirstName)" />
    </div>

    <div class="form-group">
        <label for="lastName">Last Name:</label>
        <InputText id="lastName" class="form-control" @bind-Value="person.LastName" />
        <ValidationMessage For="@(() => person.LastName)" />
    </div>

    <div class="form-group">
        <label for="email">Email:</label>
        <InputText id="email" class="form-control" @bind-Value="person.Email" />
        <ValidationMessage For="@(() => person.Email)" />
    </div>

    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>

@if (isFormSubmitted)
{
    <p class="alert alert-success">Form submitted successfully!</p>
}

@code {
    private Person person = new Person();
    private bool isFormSubmitted = false;

    private void HandleValidSubmit()
    {
        // This method is called when the form is submitted and passes validation.
        // You can perform further actions, such as saving the data.
        isFormSubmitted = true;
    }

    private class Person
    {
        [Required(ErrorMessage = "First Name is required.")]
        public string? FirstName { get; set; }

        [Required(ErrorMessage = "Last Name is required.")]
        public string? LastName { get; set; }

        [Required(ErrorMessage = "Email is required.")]
        [EmailAddress(ErrorMessage = "Invalid email address.")]
        public string? Email { get; set; }
    }
}